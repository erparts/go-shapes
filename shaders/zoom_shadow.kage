//kage:unit pixels
package main

func Fragment(targetCoords vec4, sourceCoords vec2, color vec4, customVAs vec4) vec4 {
	minSrc0, maxSrc0 := GetSource0ClampCoords(int(customVAs.z))
	zoom := customVAs.w
	srcSize := imageSrc0Size()
	aspect := normalize(vec2(srcSize.x/srcSize.y, 1.0))
	unit := aspect * vec2(1.0/zoom)
	coords := sourceCoords - customVAs.xy
	return color * fixedGaussianAlphaSampling(coords, unit, minSrc0, maxSrc0)
}

func GetSource0ClampCoords(clamping int) (vec2, vec2) {
	const unclampedMin, unclampedMax = -16384.0, +16384.0
	const epsilon = 1.0 / 16384.0
	const clampBits = 0b1111
	const clampTopBit, clampBottomBit = 0b1000, 0b0100
	const clampLeftBit, clampRightBit = 0b0010, 0b0001

	if clamping&clampBits == 0 {
		return vec2(unclampedMin), vec2(unclampedMax)
	}
	origin := imageSrc0Origin()
	minCoords := origin
	maxCoords := origin + imageSrc0Size() - vec2(epsilon)
	minCoords.y = AB01(unclampedMin, minCoords.y, min(clamping&clampTopBit, 1))
	maxCoords.y = AB01(unclampedMax, maxCoords.y, min(clamping&clampBottomBit, 1))
	minCoords.x = AB01(unclampedMin, minCoords.x, min(clamping&clampLeftBit, 1))
	maxCoords.x = AB01(unclampedMax, maxCoords.x, min(clamping&clampRightBit, 1))
	return minCoords, maxCoords
}

// Returns a if selector is 0, b if selector is 1.
func AB01(a, b float, selector int) float {
	return a*float(1.0-selector) + b*float(selector)
}

func fixedGaussianAlphaSampling(coords, unit, minSrcCoords, maxSrcCoords vec2) float {
	const cornerWeight = 0.075
	const centerWeight = 0.204
	const edgeWeight = 0.124

	acc := 0.0
	acc += imageSrc0At(clamp(coords+vec2(-1.0, -1.0)*unit, minSrcCoords, maxSrcCoords)).a * cornerWeight
	acc += imageSrc0At(clamp(coords+vec2(0.0, -1.0)*unit, minSrcCoords, maxSrcCoords)).a * edgeWeight
	acc += imageSrc0At(clamp(coords+vec2(1.0, -1.0)*unit, minSrcCoords, maxSrcCoords)).a * cornerWeight

	acc += imageSrc0At(clamp(coords+vec2(-1.0, 0.0)*unit, minSrcCoords, maxSrcCoords)).a * edgeWeight
	acc += imageSrc0At(clamp(coords+vec2(0.0, 0.0)*unit, minSrcCoords, maxSrcCoords)).a * centerWeight
	acc += imageSrc0At(clamp(coords+vec2(1.0, 0.0)*unit, minSrcCoords, maxSrcCoords)).a * edgeWeight

	acc += imageSrc0At(clamp(coords+vec2(-1.0, 1.0)*unit, minSrcCoords, maxSrcCoords)).a * cornerWeight
	acc += imageSrc0At(clamp(coords+vec2(0.0, 1.0)*unit, minSrcCoords, maxSrcCoords)).a * edgeWeight
	acc += imageSrc0At(clamp(coords+vec2(1.0, 1.0)*unit, minSrcCoords, maxSrcCoords)).a * cornerWeight

	return acc
}
