//kage:unit pixels
package main

var KernelLen int
var Kernel [9]float // 1D kernel, center and one side, since gaussian kernels are symmetrical

func Fragment(targetCoords vec4, sourceCoords vec2, color vec4, customVAs vec4) vec4 {
	srcCoords := floor(sourceCoords) + vec2(0.5)
	clrMix := customVAs[0]
	accColor := imageSrc0At(srcCoords) * Kernel[0]
	for offset := 1; offset < 9; offset += 1 {
		if offset >= KernelLen {
			break
		}
		left := vec2(srcCoords.x-float(offset), srcCoords.y)
		right := vec2(srcCoords.x+float(offset), srcCoords.y)
		clrLeft, clrRight := imageSrc0At(left), imageSrc0At(right)
		accColor += clrLeft * Kernel[offset]
		accColor += clrRight * Kernel[offset]
	}

	return mix(color*accColor.a, accColor, clrMix)
}
