//kage:unit pixels
package main

var InnerThickness float
var Rounding float

func Fragment(targetCoords vec4, _ vec2, color vec4, customVAs vec4) vec4 {
	const AAMargin = 1.333

	origin := customVAs.xy
	size := customVAs.zw

	p := (targetCoords.xy - imageDstOrigin()) - origin - size/2
	dist := distanceToRoundedRect(p, size.x, size.y, Rounding)
	alpha := (1.0 - smoothstep(-AAMargin, 0, dist)) * (smoothstep(-InnerThickness, -InnerThickness+AAMargin, dist))
	alpha = pow(alpha, 1.0/2.2)
	return color * alpha
}

func distanceToRoundedRect(coords vec2, width, height, radius float) float {
	return distanceToRect(coords, width-radius*2, height-radius*2) - radius
}

func distanceToRect(coords vec2, width, height float) float {
	size := vec2(width, height)
	distXY := abs(coords) - size/2.0
	outDist := length(max(distXY, 0))
	inDist := min(max(distXY.x, distXY.y), 0)
	return outDist + inDist
}
