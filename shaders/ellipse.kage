//kage:unit pixels
package main

var Radians float

func Fragment(targetCoords vec4, _ vec2, color vec4, customVAs vec4) vec4 {
	center := customVAs.xy
	radius := customVAs.zw // horz and vert radius

	dist := distanceToEllipse((targetCoords.xy-imageDstOrigin())-center, radius, Radians)
	alpha := 1.0 - smoothstep(-1.333, 0, dist)
	alpha = pow(alpha, 1.0/2.2)
	return color * alpha
}

func distanceToEllipse(p vec2, radius vec2, rads float) float {
	if rads != 0 {
		p = rotatePoint(p, rads)
	}
	k1 := length(p / radius)
	k2 := length(p / (radius * radius))
	return k1 * (k1 - 1.0) / k2
}

func rotatePoint(p vec2, rads float) vec2 {
	rc, rs := cos(rads), sin(rads)
	return vec2(p.x*rc-p.y*rs, p.x*rs+p.y*rc)
}
