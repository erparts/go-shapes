//kage:unit pixels
package main

var Roundness float

func Fragment(targetCoords vec4, _ vec2, color vec4, customVAs vec4) vec4 {
	center := customVAs.xy
	apothem := customVAs.z
	radians := customVAs.w
	p := (targetCoords.xy - imageDstOrigin()) - center
	dist := distanceToHexagon(p, apothem, radians)
	alpha := 1.0 - smoothstep(-1.333, 0, dist-Roundness)
	alpha = pow(alpha, 1.0/2.2)
	return color * alpha
}

func distanceToHexagon(p vec2, apothem float, rads float) float {
	k := vec3(-0.866025404, 0.5, 0.577350269)
	if rads != 0 {
		p = rotatePoint(p, rads)
	}
	p = abs(p)
	p -= 2.0 * min(dot(k.xy, p), 0.0) * k.xy
	p -= vec2(clamp(p.x, -k.z*apothem, k.z*apothem), apothem)
	return length(p) * sign(p.y)
}

func rotatePoint(p vec2, rads float) vec2 {
	rc, rs := cos(rads), sin(rads)
	return vec2(p.x*rc-p.y*rs, p.x*rs+p.y*rc)
}
