//kage:unit pixels
package main

func Fragment(targetCoords vec4, sourceCoords vec2, color vec4, customVAs vec4) vec4 {
	const MaxRadius = 32.0
	const Edge = 1.333
	const SafetyMargin = 0.0

	srcCoords := floor(sourceCoords) + vec2(0.5)
	radius := customVAs[0]
	sigma := max(radius, 0.001) / 3.0
	sigma2 := 2.0 * sigma * sigma
	clrMix := customVAs[1]
	halfRadius := radius / 2.0
	accColor := vec4(0.0)
	accWeight := 0.0

	for x := -SafetyMargin; x < MaxRadius; x += 1.0 {
		if x > radius+SafetyMargin {
			break
		}
		sample := floor(vec2(srcCoords.x-halfRadius+x, srcCoords.y)) + vec2(0.5)
		clr := imageSrc0At(sample)
		dist := abs(srcCoords.x - sample.x)
		if dist <= halfRadius+Edge {
			dist2 := dist * dist
			factor := exp(-dist2 / sigma2)
			accColor += clr * factor
			accWeight += factor
		}
	}

	alpha := accColor.a / accWeight
	return mix(color*alpha, accColor/accWeight, clrMix)
}
