//kage:unit pixels
package main

func Fragment(targetCoords vec4, sourceCoords vec2, color vec4, customVAs vec4) vec4 {
	const MaxRadius = 32.0
	const Edge = 1.333
	const SafetyMargin = 0.0

	srcCoords := floor(sourceCoords) + vec2(0.5)
	radius := customVAs[0]
	clrMix := customVAs[1]
	sigma := radius / 3.0
	sigma2 := 2.0 * sigma * sigma
	halfRadius := radius / 2.0
	accColor := vec4(0.0)
	accWeight := 0.0

	scanOffset := vec2(halfRadius)
	for y := -SafetyMargin; y < MaxRadius; y += 1.0 {
		if y > radius+SafetyMargin {
			break
		}
		for x := -SafetyMargin; x < MaxRadius; x += 1.0 {
			if x > radius+SafetyMargin {
				break
			}
			offset := vec2(x, y) - scanOffset
			sample := floor(srcCoords+offset) + vec2(0.5)
			clr := imageSrc0At(sample)
			dist := distance(srcCoords, sample)
			if dist <= halfRadius+Edge {
				// accurate gaussian blur
				factor := exp(-(dist * dist) / sigma2)

				// approximate gaussian blur
				// r := halfRadius + Edge
				// dist2 := dot(offset, offset)
				// factor := max(0.0, 1.0-dist2/(r*r))
				// factor *= factor

				accColor += clr * factor
				accWeight += factor
			}
		}
	}

	alpha := accColor.a / accWeight
	return mix(color*alpha, accColor/accWeight, clrMix)
}
