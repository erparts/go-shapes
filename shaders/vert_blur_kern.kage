//kage:unit pixels
package main

var KernelLen int
var Kernel [9]float // 1D kernel, center and one side, since gaussian kernels are symmetrical

func Fragment(targetCoords vec4, sourceCoords vec2, color vec4, customVAs vec4) vec4 {
	srcCoords := floor(sourceCoords) + vec2(0.5)
	accColor := imageSrc0At(srcCoords) * Kernel[0]
	for offset := 1; offset < 9; offset += 1 {
		if offset >= KernelLen {
			break
		}
		top := vec2(srcCoords.x, srcCoords.y-float(offset))
		bottom := vec2(srcCoords.x, srcCoords.y+float(offset))
		clrTop, clrBottom := imageSrc0At(top), imageSrc0At(bottom)
		accColor += clrTop * Kernel[offset]
		accColor += clrBottom * Kernel[offset]
	}
	return accColor
}
